worker_processes auto;

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout  65;

    # Define upstreams for your services
    # These names ('frontend', 'api', 'grafana') must match the service names in your docker-compose.yml
    upstream frontend_service {
        server frontend:80; # 'frontend' is the service name, port 80 is exposed by its Nginx
    }

    upstream backend_api_service {
        server api:8000;    # 'api' is the service name, port 8000 is exposed by your backend
    }

    upstream grafana_service {
        server grafana:3000; # 'grafana' is the service name, port 3000 is its internal port
    }

    server {
        listen 80;
        server_name localhost; # Or your actual domain if you have one

        access_log /var/log/nginx/access.log;
        error_log /var/log/nginx/error.log;

        # Route general API calls (e.g., /api/v1/projects)
        location /api/v1/ {
            proxy_pass http://backend_api_service/api/v1/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_buffering off;
        }

        # Route authentication API calls (e.g., /auth/token, /auth/signup)
        location /auth/ {
            proxy_pass http://backend_api_service/auth/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_buffering off;
        }

        # Route FastAPI docs
        location /docs {
            proxy_pass http://backend_api_service/docs;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        location /openapi.json {
            proxy_pass http://backend_api_service/openapi.json;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        location /redoc {
            proxy_pass http://backend_api_service/redoc;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Route Grafana requests
        # Access Grafana via http://localhost/grafana/
        location /grafana/ {
            proxy_pass http://grafana_service/; # Note the trailing slash here
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade"; # Required for Grafana Live (WebSockets)
        }

        # Route all other requests to the frontend
        location / {
            proxy_pass http://frontend_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}